Meaningfull 
1. create static class if the function or the class doesnt need to refer itself like 
    an instance 
2. :: colon - it represents a static function or property

3. ob_start();
            // Turns on output buffering. it will leave a comment there 
            // basically daw it awaits untill all of the period executed before outputting it to the page
            // parang sa ES6 - ung await ata un.
            // wait daw muna all the PHP code has been executed before output
4. session_start();
             // We are able to use sessions.
             // even after the page been closed -
             // by default until the browser is closed

 5. Setting the default time zone.  
             - date_default_timezone_set("Europe/Budapest"); 

----------------------------------------------------------------------------
f2v5 - Creating the users table
1. we create database names
	- id, firtname, lastname, username, email, password, 
	- signUpDate - DATETIME, CURRENT_TIME
	- isSubscribe - TINYINT - 1 or 0    |  true or false
		- As defined : 0 - zero meaning they are not signed up
----------------------------------------------------------------------------
f3v15 - 017 Sanitising 

0. we called it in register.php
1.  class FormSanitizer {

    public static function sanitizeFormString($inputText) {
        $inputText = strip_tags($inputText); // Remove all the HTML tags.
        $inputText = str_replace(" ", "", $inputText); // Removing all spaces.
        // $inputText = trim($inputText) Remove all spaces after and before the text, but keep all the spaces inside.
        $inputText = strtolower($inputText);
        $inputText = ucfirst($inputText); // ucfirst() function converts the first character of a string to uppercase. Related functions: 
        return $inputText;
    }

    public static function sanitizeFormUsername($inputText) {
        $inputText = strip_tags($inputText); // Remove all the HTML tags.
        $inputText = str_replace(" ", "", $inputText); // Removing all spaces.
        return $inputText;
    }

    public static function sanitizeFormPassword($inputText) {
        $inputText = strip_tags($inputText); // Remove all the HTML tags.
        return $inputText;
    }

    public static function sanitizeFormEmail($inputText) {
        $inputText = strip_tags($inputText); // Remove all the HTML tags.
        $inputText = str_replace(" ", "", $inputText); // Removing all spaces.
        return $inputText;
    }

}

if (isset($_POST["submitButton"])) {
	$firstName = FormSanitizer::sanitizeFormString($_POST["firstName"]);
	$lastName = FormSanitizer::sanitizeFormString($_POST["lastName"]);
	$username = FormSanitizer::sanitizeFormUsername($_POST["username"]);
	$email = FormSanitizer::sanitizeFormEmail($_POST["email"]);
	$email2 = FormSanitizer::sanitizeFormEmail($_POST["email2"]);
	$password = FormSanitizer::sanitizeFormPassword($_POST["password"]);
	$password2 = FormSanitizer::sanitizeFormPassword($_POST["password2"]);
----------------------------------------------------------------------------
f16 - Form Sanitizer Class

1. 	// static means - dont need to create an instance of the class in order to call it
    example of - instance - 
    $sf = new FormSanitizer
        - ung name ng class
2. 

----------------------------------------------------------------------------
f3v18 - config file

3. ob_start();
            // Turns on output buffering. it will leave a comment there 
            // basically daw it awaits untill all of the period executed before outputting it to the page
            // parang sa ES6 - ung await ata un.
            // wait daw muna all the PHP code has been executed before output
4. session_start();
             // We are able to use sessions.
             // even after the page been closed -
             // by default until the browser is closed

 5. Setting the default time zone.  
             - date_default_timezone_set("Europe/Budapest"); 
----------------------------------------------------------------------------
f3v19 - Connecting to the database -  


try {
    $con = new PDO("mysql:dbname=reeceflix;host=localhost", "root", "");
        // connect to the database
    $con->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_WARNING);
		// set the error reporting 
		// PDO :: ATTR_ERRMODE - we are accesing a static property on the PDO object called attribute error mode
		//						- we are setting -
		// PDO::ERRMODE_WARNING - we are setting the value of PDO :: ATTR_ERRMODE
		// ERRMODE_WARNING - means it can help any errors for us and maybe continue the rest of the script depending on what the code is
	} catch (PDOException $e) {
    exit("Connection failed: " . $e->getMessage());
}
----------------------------------------------------------------------------
f3v20 - Creating the Account class

1. parang ES6 module. 
 private $con;
 public function __construct($con)
	{
		$this->con = $con;
	}
2. tapos we now call it to the register.php
----------------------------------------------------------------------------
f3v21 - Validating the first name
1.  private $errorArray = array();  - we create an empty array to store the erros
2.  array_push($this->errorArray, Constants::$firstNameCharacters);
        - array push daw. ung 2nd args is the value we set or we push
----------------------------------------------------------------------------
f3v22 - Displaying error 

1. create a new on register.php para macall natin sya sa pinaka page
        $account = new Account($con);
2. sa validateFirstName ichechek dun kung <2 or >25 . if yes mag push ung error dun sa error_array
         $account->validateFirstName($firstName);
3. so meron ng laman ung error_array, kaya mag a-output na sa register.php ung error kung true ung condition sa taas ok?
    echo $account->getError();
----------------------------------------------------------------------------
f3v23 - Using Constatnts for our error messages
1. ung Constans::$firstNameCharacters pala dito is classes lang din. aha!
     array_push($this->errorArray, Constants::$firstNameCharacters);
2. we can also reuse that in the register.php error. AWesome!
----------------------------------------------------------------------------
f3v24 - Validating the last name 
1. we create public function register();
2. to be called in register.php and to be use in register.php 
    - ginawa din natin private na ung mga validation(), so c register lang ang makakacall sa mga un.
3. we have change public to private for the likes of function validateFirstName($fn)
    - meaning these classes are only allowed to be called inside their classes
    - so sa loob ng register() dun sila pinag tatawag kaya pwedeng iprivate
4. it will handle all the validation
    - register($fn, $ln, $un, $em, $em2, $pw, $pw2) 
5. eto ung mga validation
   $this->validateFirstName($fn);
   $this->validateLastName($ln);
   $this->validateUsername($un);
   $this->validateEmails($em, $em2);
   $this->validatePasswords($pw, $pw2);
----------------------------------------------------------------------------
f3v25 - validating username 

1. this how we do query in the database    
    - ung username=:un - we need to bindValue muna para tumamaung value
        $query = $this->con->prepare("SELECT * FROM users WHERE username=:un");
        $query->bindValue(":un", $un);
    - parang eto ung sa confirm() sa helper class ni Diaz
        $query->execute();

----------------------------------------------------------------------------
f3v26 - Validating the email

1.  how to filter email
  if (!filter_var($em, FILTER_VALIDATE_EMAIL)) {
            array_push($this->errorArray, Constants::$emailInvalid);
            return;
        }

2. tatlo ung error message ng email wow . sa register.php
<?php echo $account->getError(Constants::$emailsDontMatch); ?>
<?php echo $account->getError(Constants::$emailInvalid); ?>
<?php echo $account->getError(Constants::$emailTaken); ?>    
----------------------------------------------------------------------------
f3v27 - validate passwords
1. same thing we did to username etc. becoz we already sanitized it.
----------------------------------------------------------------------------
f3v28 - Styling the error message
